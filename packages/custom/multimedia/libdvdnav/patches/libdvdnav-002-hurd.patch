Author: Guillem Jover <guillem@debian.org>
Description:
 Use dynamically allocated strings instead of hardcoded size ones to fix FTBFS
 on hurd (Closes: #641028).

--- a/src/dvdnav.c
+++ b/src/dvdnav.c
@@ -105,8 +105,7 @@
   }
 
   /* Set the path. FIXME: Is a deep copy 'right' */
-  strncpy(this->path, path, MAX_PATH_LEN - 1);
-  this->path[MAX_PATH_LEN - 1] = '\0';
+  this->path = strdup(path);
 
   /* Pre-open and close a file so that the CSS-keys are cached. */
   this->file = DVDOpenFile(vm_get_dvd_reader(this->vm), 0, DVD_READ_MENU_VOBS);
--- a/src/dvdnav_internal.h
+++ b/src/dvdnav_internal.h
@@ -65,13 +65,6 @@
 /* Maximum length of an error string */
 #define MAX_ERR_LEN 255
 
-/* Use the POSIX PATH_MAX if available */
-#ifdef PATH_MAX
-#define MAX_PATH_LEN PATH_MAX
-#else
-#define MAX_PATH_LEN 255 /* Arbitrary */
-#endif
-
 #ifndef DVD_VIDEO_LB_LEN
 #define DVD_VIDEO_LB_LEN 2048
 #endif
@@ -144,7 +137,7 @@
 
 struct dvdnav_s {
   /* General data */
-  char        path[MAX_PATH_LEN]; /* Path to DVD device/dir */
+  char       *path;               /* Path to DVD device/dir */
   dvd_file_t *file;               /* Currently opened file */
 
   /* Position data */
--- a/src/remap.c
+++ b/src/remap.c
@@ -28,10 +28,6 @@
 #ifndef _MSC_VER
 #include <sys/param.h>
 #include <fcntl.h>
-#else
-#ifndef MAXPATHLEN
-#define MAXPATHLEN 255
-#endif
 #endif /* _MSC_VER */
 
 #include <inttypes.h>
@@ -191,7 +187,7 @@
 
 remap_t* remap_loadmap( char *title) {
     char buf[160];
-    char fname[MAXPATHLEN];
+    char *fname;
     char *home;
     int res;
     FILE *fp;
@@ -205,14 +201,19 @@
         fprintf(MSG_OUT, "libdvdnav: Unable to find home directory" );
         return NULL;
     }
-    snprintf(fname, sizeof(fname), "%s/.dvdnav/%s.map", home, title);
+    fname = malloc(strlen("/.dvdnav/.map") + strlen(home) + strlen(title) + 1);
+    if (!fname)
+        return NULL;
+    sprintf(fname, "%s/.dvdnav/%s.map", home, title);
 
     /* Open the map file */
     fp = fopen( fname, "r");
     if (!fp) {
 	fprintf(MSG_OUT, "libdvdnav: Unable to find map file '%s'\n", fname);
+	free(fname);
 	return NULL;
     }
+    free(fname);
 
     /* Load the map file */
     map = remap_new( title);
